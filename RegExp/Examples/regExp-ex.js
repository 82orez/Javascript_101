// * 특정 단어로 끝나는지 검사
// 'html' 로 끝나는지 검사
// $ : 문자열의 끝을 의미한다.

const fileName = 'index.html';
const regExp01 = /html$/;


// * 숫자로만 이루어져 있는지 검사
// 모두 숫자인지 검사
// [] 바깥의 ^는 문자열의 처음을 의미한다.

const targetStr = '12345';
const regExp02 = /^\d+$/;


// * 아이디 사용 검사
// 알파벳 대소문자 또는 숫자로 시작하고 끝나며 4 ~10자리인지 검사
// {4,10}: 4 ~ 10자리

const id = 'abc123';
const regExp03 = /^[A-Za-z0-9]{4,10}$/;


// * 핸드폰 번호 형식

const cellphone = '010-1234-5678';
const regExp04 = /^\d{3}-\d{3,4}-\d{4}$/;


// * 전화번호 형식
// 유선번호라면 02-111-2222 형식이고, 핸드폰번호라면 010-1111-2222 형식을 모두 포함하는 정규식 (숫자의 갯수가 다름)
const text01 =
  `http://dogumaster.com http://google.com 010-1111-2222 02-333-7777 curryyou@aaa.com`;

text01.match(/\d{2,3}-\d{3,4}-\d{4}/g); // [ '010-1111-2222', '02-333-7777' ]

/*
1) \d{2,3} => 숫자 2~3개로 시작하고,
2) \- => 다음에 하이픈(-)이 오고
3) \d{3, 4} => 다음에 숫자가 3~4개 오고,
4) \- => 다음에 하이픈(-)이 오고,
5) \d{4} => 다음에 숫자가 4개 온다.
6) g => 매칭되는걸 모두 다 찾는다(플래그)
*/

// * 웹사이트 주소 형식
// http:// 나 https://로 시작하고, 알파벳, 어더스코어(_), 하이픈(-), dot(.)으로 이루어져 있는 정규식

const text02 =
  `http://dogumaster.com http://google.com 010-1111-2222 02-333-7777 curryyou@aaa.com`;

text02.match(/https?:\/\/[\w\-\.]+/g); // ["http://dogumaster.com", "http://google.com"]

/*
1) http => 로 시작하고,
2) s? => 다음에 s는 없거나, 있고,
3) \/\/ => 다음에 특수기호 // 가 오고
4) [\w\-\.]+ => \w(영문자, 언더스코어), 하이픈, 쩜 으로 이루어진 문자열이 한개 이상(+) 있다.
5) g => 매칭되는걸 모두 다 찾는다.(플래그)
*/


// * 이메일주소 형식

const text03 = `http://dogumaster.com http://google.com 010-1111-2222 02-333-7777 curryyou@aaa.com`;
text03.match(/[\w\-\.]+\@[\w\-\.]+/g); // [ 'curryyou@aaa.com' ]

// ? 좀더 엄격한 검사가 필요하다면, 상황에 맞게 수정해서 사용면 된다.
const email = 'ungmo2@gmail.com';
const regExp05 = /^[0-9a-zA-Z]([-_\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\.]?[0-9a-zA-Z])*\.[a-zA-Z]{2,3}$/;


// * 특수기호 정규표현식
// 문자와 숫자가 아닌것을 매칭

const regExp06 = /[^a-zA-Z0-9가-힣ㄱ-ㅎ]/g;
// console.log('$^!'.match(regExp06));


// * 이밖의 정규표현식 모음

// /* 전화번호 */
// var localPhone = /^(0(2|3[1-3]|4[1-4]|5[1-5]|6[1-4]))(\d{3,4})(\d{4})$/;
// var cellPhone = /^(?:(010\d{4})|(01[1|6|7|8|9]-\d{3,4}))(\d{4})$/;
//
// /* 숫자 형식 */
// var number = /[0-9]/;
// var unsignedInt  = /^[1-9][0-9]*$/;
// var notNumber = /[^(0-9)]/gi;
//
// /* 문자 형식 */
// var korea_cv = /[ㄱ-ㅎ|ㅏ-ㅣ]/;
// var korea = /[가-힣]/;
// var koreaName = /[가-힣]/;
// var english = /[a-z | A-Z]/;
//
// /* 특문 */
// var special_char = /[\{\}\[\]\/?.,;:|\)*~`!^\-+<>@\#$%&\\\=\(\'\"]/;
// var comma_char = /,/g;
// var blank = /[\s]/g;
//
// /* 아이디 / 비밀번호 */
// var id_check = /^[a-z | A-Z]{3,6}[0-9]{3,6}$/;
// var password =/^.*(?=.{6,20})(?=.*[0-9])(?=.*[a-zA-Z]).*$/;
//
// /* 이메일 형식 */
// var email =/([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
//
// /* 도메인 형식 */
// var domain_all =/([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)
//   |(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
// var domain_include = /^((http(s?))\:\/\/)([0-9a-zA-Z\-]+\.)+[a-zA-Z]{2,6}(\:[0-9]+)?(\/\S*)?$/;
// var domain_exclude = /^[^((http(s?))\:\/\/)]([0-9a-zA-Z\-]+\.)+[a-zA-Z]{2,6}(\:[0-9]+)?(\/\S*)?$/;
//
// /* 영문 한글만 */
// var ko_en_num_charactor = /^[가-힣a-zA-Z0-9]*$/;
// var ko_en_charactor = /^[가-힣a-zA-Z]*$/;
//
// /* 자동차 번호판 */
// var car = /^[0-9]{2}[\s]*[가-힣]{1}[\s]*[0-9]{4}$/;
// var old_car = /^[가-힣]{2}[\s]*[0-9]{2}[\s]*[가-힣]{1}[\s]*[0-9]{4}$/;
